{"ast":null,"code":"import { apiUrl, REQUEST_LOGIN_ACCOUNT, LOGIN_ACCOUNT_SUCCESS, LOGIN_ACCOUNT_FAIL, REQUEST_REGISTER_ACCOUNT, REGISTER_ACCOUNT_FAIL, REGISTER_ACCOUNT_SUCCESS } from '../../common/constant';\nimport axios from 'axios';\nimport { alertAuthenticationError } from '../../common/libs';\nexport const loginAccountAction = (email, password) => async dispatch => {\n  console.log(email, password);\n\n  try {\n    dispatch({\n      type: REQUEST_LOGIN_ACCOUNT\n    });\n    const {\n      data\n    } = await axios.post(`${apiUrl}/user/login`, {\n      email,\n      password\n    });\n    console.log(data);\n\n    if (data.status === \"success\") {\n      localStorage.setItem('RoleData', data.data.role);\n      dispatch({\n        type: LOGIN_ACCOUNT_SUCCESS,\n        payload: data\n      });\n    } else {\n      alertAuthenticationError(data.message);\n      dispatch({\n        type: LOGIN_ACCOUNT_FAIL\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: LOGIN_ACCOUNT_FAIL\n    });\n  }\n};\nexport const registerAccountAction = (email, username, password) => async dispatch => {\n  try {\n    dispatch({\n      type: REQUEST_REGISTER_ACCOUNT\n    });\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${apiUrl}/user/register`, {\n      email,\n      username,\n      password\n    }, config);\n    console.log(data);\n\n    if (data.status === \"success\") {\n      dispatch({\n        type: REGISTER_ACCOUNT_SUCCESS\n      });\n    } else {\n      alertAuthenticationError(data.message);\n      dispatch({\n        type: REGISTER_ACCOUNT_FAIL\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: REGISTER_ACCOUNT_FAIL,\n      payload: \"Tài Khoản hoặc mật khẩu không đúng, vui lòng nhập lại\"\n    });\n  }\n};","map":{"version":3,"names":["apiUrl","REQUEST_LOGIN_ACCOUNT","LOGIN_ACCOUNT_SUCCESS","LOGIN_ACCOUNT_FAIL","REQUEST_REGISTER_ACCOUNT","REGISTER_ACCOUNT_FAIL","REGISTER_ACCOUNT_SUCCESS","axios","alertAuthenticationError","loginAccountAction","email","password","dispatch","console","log","type","data","post","status","localStorage","setItem","role","payload","message","error","registerAccountAction","username","config","headers"],"sources":["C:/Users/Admin/Desktop/Task-App/frontend/src/behaviors/actions/user.js"],"sourcesContent":["import {\r\n    apiUrl,\r\n    REQUEST_LOGIN_ACCOUNT,\r\n    LOGIN_ACCOUNT_SUCCESS,\r\n    LOGIN_ACCOUNT_FAIL,\r\n    REQUEST_REGISTER_ACCOUNT,\r\n    REGISTER_ACCOUNT_FAIL,\r\n    REGISTER_ACCOUNT_SUCCESS\r\n}\r\nfrom '../../common/constant'\r\nimport axios from 'axios'\r\nimport { alertAuthenticationError } from '../../common/libs'\r\n\r\nexport const loginAccountAction = (email, password) => async (dispatch) =>{\r\n    console.log(email, password)\r\n    try{\r\n        dispatch({\r\n            type:REQUEST_LOGIN_ACCOUNT\r\n        })\r\n        const {data} = await axios.post(`${apiUrl}/user/login`,{email,password})\r\n        console.log(data)\r\n        if(data.status===\"success\"){\r\n            localStorage.setItem('RoleData',data.data.role)\r\n            dispatch({\r\n                type:LOGIN_ACCOUNT_SUCCESS,\r\n                payload:data\r\n            })\r\n        }\r\n        else{\r\n            alertAuthenticationError(data.message)\r\n            dispatch({\r\n                type: LOGIN_ACCOUNT_FAIL\r\n            })\r\n        }\r\n\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n        dispatch({\r\n            type: LOGIN_ACCOUNT_FAIL\r\n        })\r\n    }\r\n}\r\n\r\nexport const registerAccountAction = (email,username,password) => async(dispatch) =>{\r\n    try{\r\n        dispatch({\r\n            type:REQUEST_REGISTER_ACCOUNT\r\n        })\r\n        const config = {\r\n            headers: {\r\n                'content-type' : 'application/json',\r\n            }\r\n        }\r\n        const {data} = await axios.post(`${apiUrl}/user/register`,{email,username,password},config)\r\n        console.log(data)\r\n\r\n        if(data.status === \"success\"){\r\n            dispatch({\r\n                type:REGISTER_ACCOUNT_SUCCESS\r\n            })\r\n        }\r\n        else{\r\n            alertAuthenticationError(data.message)\r\n            dispatch({\r\n                type:REGISTER_ACCOUNT_FAIL\r\n            })\r\n        }\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n        dispatch({\r\n            type:REGISTER_ACCOUNT_FAIL,\r\n            payload: \"Tài Khoản hoặc mật khẩu không đúng, vui lòng nhập lại\"\r\n        })\r\n\r\n    }\r\n}\r\n"],"mappings":"AAAA,SACIA,MADJ,EAEIC,qBAFJ,EAGIC,qBAHJ,EAIIC,kBAJJ,EAKIC,wBALJ,EAMIC,qBANJ,EAOIC,wBAPJ,QASK,uBATL;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,mBAAzC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAmB;EACtEC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmBC,QAAnB;;EACA,IAAG;IACCC,QAAQ,CAAC;MACLG,IAAI,EAACd;IADA,CAAD,CAAR;IAGA,MAAM;MAACe;IAAD,IAAS,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAEjB,MAAO,aAArB,EAAkC;MAACU,KAAD;MAAOC;IAAP,CAAlC,CAArB;IACAE,OAAO,CAACC,GAAR,CAAYE,IAAZ;;IACA,IAAGA,IAAI,CAACE,MAAL,KAAc,SAAjB,EAA2B;MACvBC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCJ,IAAI,CAACA,IAAL,CAAUK,IAA1C;MACAT,QAAQ,CAAC;QACLG,IAAI,EAACb,qBADA;QAELoB,OAAO,EAACN;MAFH,CAAD,CAAR;IAIH,CAND,MAOI;MACAR,wBAAwB,CAACQ,IAAI,CAACO,OAAN,CAAxB;MACAX,QAAQ,CAAC;QACLG,IAAI,EAAEZ;MADD,CAAD,CAAR;IAGH;EAEJ,CApBD,CAqBA,OAAMqB,KAAN,EAAY;IACRX,OAAO,CAACC,GAAR,CAAYU,KAAZ;IACAZ,QAAQ,CAAC;MACLG,IAAI,EAAEZ;IADD,CAAD,CAAR;EAGH;AACJ,CA7BM;AA+BP,OAAO,MAAMsB,qBAAqB,GAAG,CAACf,KAAD,EAAOgB,QAAP,EAAgBf,QAAhB,KAA6B,MAAMC,QAAN,IAAkB;EAChF,IAAG;IACCA,QAAQ,CAAC;MACLG,IAAI,EAACX;IADA,CAAD,CAAR;IAGA,MAAMuB,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAiB;MADZ;IADE,CAAf;IAKA,MAAM;MAACZ;IAAD,IAAS,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAEjB,MAAO,gBAArB,EAAqC;MAACU,KAAD;MAAOgB,QAAP;MAAgBf;IAAhB,CAArC,EAA+DgB,MAA/D,CAArB;IACAd,OAAO,CAACC,GAAR,CAAYE,IAAZ;;IAEA,IAAGA,IAAI,CAACE,MAAL,KAAgB,SAAnB,EAA6B;MACzBN,QAAQ,CAAC;QACLG,IAAI,EAACT;MADA,CAAD,CAAR;IAGH,CAJD,MAKI;MACAE,wBAAwB,CAACQ,IAAI,CAACO,OAAN,CAAxB;MACAX,QAAQ,CAAC;QACLG,IAAI,EAACV;MADA,CAAD,CAAR;IAGH;EACJ,CAvBD,CAwBA,OAAMmB,KAAN,EAAY;IACRX,OAAO,CAACC,GAAR,CAAYU,KAAZ;IACAZ,QAAQ,CAAC;MACLG,IAAI,EAACV,qBADA;MAELiB,OAAO,EAAE;IAFJ,CAAD,CAAR;EAKH;AACJ,CAjCM"},"metadata":{},"sourceType":"module"}